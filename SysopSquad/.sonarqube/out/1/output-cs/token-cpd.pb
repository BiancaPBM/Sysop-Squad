î,
]C:\TSP.NET\Sysop-Squad\SysopSquad\TicketHandling.Microservice\Controllers\TicketController.cs
	namespace 	
TicketHandling
 
. 
Microservice %
.% &
Controllers& 1
{ 
[		 
ApiController		 
]		 
[

 
Route

 
(

 	
$str

	 
)

 
]

  
public 

class 
TicketsController "
:# $
ControllerBase% 3
{ 
private 
readonly 
ITicketRepository *
_repository+ 6
;6 7
public 
TicketsController  
(  !
ITicketRepository! 2

repository3 =
)= >
{ 	
_repository
 
= 

repository "
;" #
} 	
[ 
HttpGet 
] 
public 
async 
Task 
< 
IEnumerable %
<% &
Ticket& ,
>, -
>- .
Get/ 2
(2 3
)3 4
{ 	
return
 
await 
_repository "
." #
GetAll# )
() *
)* +
;+ ,
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
async 
Task 
< 
ActionResult &
<& '
Ticket' -
>- .
>. /
GetById0 7
(7 8
string8 >
id? A
)A B
{ 	
Ticket
 
ticket 
= 
await 
_repository  +
.+ ,
GetById, 3
(3 4
id4 6
)6 7
;7 8
if
 
( 
ticket 
== 
null 
) 
{  
 
return!! 
NotFound!! 
(!! 
)!! 
;!! 
}""
 
return##
 
ticket## 
;## 
}$$ 	
[%% 	
HttpGet%%	 
(%% 
$str%% 
)%% 
]%% 
public&& 
async&& 
Task&& 
<&& 
IEnumerable&& %
<&&% &
Ticket&&& ,
>&&, -
>&&- .
OrderByReview&&/ <
(&&< =
)&&= >
{'' 	
return((
 
await(( 
_repository(( "
.((" #
OrderByReview((# 0
(((0 1
)((1 2
;((2 3
})) 	
[++ 	
HttpPost++	 
]++ 
public,, 
async,, 
Task,, 
<,, 
IActionResult,, '
>,,' (
Insert,,) /
(,,/ 0
Ticket,,0 6
ticket,,7 =
),,= >
{-- 	
await..
 
_repository.. 
... 
	AddTicket.. %
(..% &
ticket..& ,
).., -
;..- .
return//
 
CreatedAtAction//  
(//  !
$str//! *
,//* +
new//, /
{//0 1
id//2 4
=//5 6
ticket//7 =
.//= >
Id//> @
}//A B
,//B C
ticket//D J
)//J K
;//K L
}00 	
[22 	
HttpPut22	 
(22 
$str22 
)22 
]22 
public33 
async33 
Task33 
<33 
IActionResult33 '
>33' (
Update33) /
(33/ 0
string330 6
id337 9
,339 :
Ticket33; A
ticket33B H
)33H I
{44 	
if55
 
(55 
id55 
!=55 
ticket55 
.55 
Id55 
)55 
{66
 
return77 

BadRequest77 
(77 
)77 
;77  
}88
 
Ticket::
 
requestedTicket::  
=::! "
await::# (
_repository::) 4
.::4 5
GetById::5 <
(::< =
id::= ?
)::? @
;::@ A
if;;
 
(;; 
requestedTicket;; 
==;;  
null;;! %
);;% &
{<<
 
return== 
NotFound== 
(== 
)== 
;== 
}>>
 
await??
 
_repository?? 
.?? 
UpdateTicket?? (
(??( )
id??) +
,??+ ,
ticket??- 3
)??3 4
;??4 5
return@@
 
	NoContent@@ 
(@@ 
)@@ 
;@@ 
}AA 	
[CC 	

HttpDeleteCC	 
(CC 
$strCC 
)CC 
]CC 
publicDD 
asyncDD 
TaskDD 
<DD 
IActionResultDD '
>DD' (
DeleteDD) /
(DD/ 0
stringDD0 6
idDD7 9
)DD9 :
{EE 	
TicketFF
 
requestedTicketFF  
=FF! "
awaitFF# (
_repositoryFF) 4
.FF4 5
GetByIdFF5 <
(FF< =
idFF= ?
)FF? @
;FF@ A
ifGG
 
(GG 
requestedTicketGG 
==GG  
nullGG! %
)GG% &
{HH
 
returnII 
NotFoundII 
(II 
)II 
;II 
}JJ
 
awaitKK
 
_repositoryKK 
.KK 
DeleteTicketKK (
(KK( )
idKK) +
)KK+ ,
;KK, -
returnLL
 
	NoContentLL 
(LL 
)LL 
;LL 
}MM 	
}NN 
}OO Ù

QC:\TSP.NET\Sysop-Squad\SysopSquad\TicketHandling.Microservice\Data\DataContext.cs
	namespace 	
TicketHandling
 
. 
Microservice %
.% &
Data& *
{ 
public 
class	 
DataContext 
{ 
public 

DataContext 
( $
ITicketsDatabaseSettings /
settings0 8
)8 9
{		 
var

 	
client


 
=

 
new

 
MongoClient

 "
(

" #
settings

# +
.

+ ,
ConnectionString

, <
)

< =
;

= >
var 	
database
 
= 
client 
. 
GetDatabase '
(' (
settings( 0
.0 1
DatabaseName1 =
)= >
;> ?
Tickets 
= 
database 
. 
GetCollection &
<& '
Ticket' -
>- .
(. /
settings/ 7
.7 8!
TicketsCollectionName8 M
)M N
;N O
} 
public 

IMongoCollection 
< 
Ticket "
>" #
Tickets$ +
{, -
get. 1
;1 2
}3 4
} 
} ®

WC:\TSP.NET\Sysop-Squad\SysopSquad\TicketHandling.Microservice\Data\ITicketRepository.cs
	namespace 	
TicketHandling
 
. 
Microservice %
.% &
Data& *
{ 
public 
	interface 
ITicketRepository #
{ 
Task		 
<		 	
IEnumerable			 
<		 
Ticket		 
>		 
>		 
GetAll		 $
(		$ %
)		% &
;		& '
Task

 
<

 	
Ticket

	 
>

 
GetById

 
(

 
string

 
id

  "
)

" #
;

# $
Task 
< 	
IEnumerable	 
< 
Ticket 
> 
> 
OrderByReview +
(+ ,
), -
;- .
Task 
	AddTicket	 
( 
Ticket 
ticket  
)  !
;! "
Task 
UpdateTicket	 
( 
string 
id 
,  
Ticket! '
ticket( .
). /
;/ 0
Task 
DeleteTicket	 
( 
string 
id 
)  
;  !
} 
} à(
VC:\TSP.NET\Sysop-Squad\SysopSquad\TicketHandling.Microservice\Data\TicketRepository.cs
	namespace 	
TicketHandling
 
. 
Microservice %
.% &
Data& *
{ 
public		 
class			 
TicketRepository		 
:		  !
ITicketRepository		" 3
{

 
private 
readonly 
DataContext  
_context! )
;) *
public 

TicketRepository 
( $
ITicketsDatabaseSettings 4
settings5 =
)= >
{ 
_context 
= 
new 
DataContext  
(  !
settings! )
)) *
;* +
} 
public 

async 
Task 
	AddTicket 
(  
Ticket  &
ticket' -
)- .
{ 
try 	
{ 
await 
_context 
. 
Tickets 
. 
InsertOneAsync -
(- .
ticket. 4
)4 5
;5 6
} 
catch 
( 
	Exception 
) 
{ 
throw 
; 
} 
} 
public 

async 
Task 
DeleteTicket "
(" #
string# )
id* ,
), -
{ 
try 	
{   
await!! 
_context!! 
.!! 
Tickets!! 
.!! 
DeleteOneAsync!! -
(!!- .
ticket!!. 4
=>!!5 7
ticket!!8 >
.!!> ?
Id!!? A
==!!B D
id!!E G
)!!G H
;!!H I
}"" 
catch## 
(## 
	Exception## 
)## 
{$$ 
throw%% 
;%% 
}&& 
}'' 
public)) 

async)) 
Task)) 
<)) 
IEnumerable)) !
<))! "
Ticket))" (
>))( )
>))) *
GetAll))+ 1
())1 2
)))2 3
{** 
try++ 	
{,, 
return-- 
await-- 
_context-- 
.-- 
Tickets-- %
.--% &
Find--& *
(--* +
ticket--+ 1
=>--2 4
true--5 9
)--9 :
.--: ;
ToListAsync--; F
(--F G
)--G H
;--H I
}.. 
catch// 
(// 
	Exception// 
)// 
{00 
throw11 
;11 
}22 
}33 
public55 

async55 
Task55 
<55 
Ticket55 
>55 
GetById55 %
(55% &
string55& ,
id55- /
)55/ 0
{66 
try77 	
{88 
return99 
await99 
_context99 
.99 
Tickets99 %
.:: 
Find:: 
(:: 
ticket:: $
=>::% '
ticket::( .
.::. /
Id::/ 1
==::2 4
id::5 7
)::7 8
.;; 
FirstOrDefaultAsync;; ,
(;;, -
);;- .
;;;. /
}<< 
catch== 
(== 
	Exception== 
)== 
{>> 
throw?? 
;?? 
}@@ 
}AA 
publicCC 

asyncCC 
TaskCC 
UpdateTicketCC "
(CC" #
stringCC# )
idCC* ,
,CC, -
TicketCC. 4
ticketCC5 ;
)CC; <
{DD 
tryEE 	
{FF 
awaitGG 
_contextGG 
.GG 
TicketsGG 
.GG 
ReplaceOneAsyncGG .
(GG. /
ticketGG/ 5
=>GG6 8
ticketGG9 ?
.GG? @
IdGG@ B
==GGC E
idGGF H
,GGH I
ticketGGJ P
)GGP Q
;GGQ R
}HH 
catchII 
(II 
	ExceptionII 
)II 
{JJ 
throwKK 
;KK 
}LL 
}MM 
publicNN 

asyncNN 
TaskNN 
<NN 
IEnumerableNN !
<NN! "
TicketNN" (
>NN( )
>NN) *
OrderByReviewNN+ 8
(NN8 9
)NN9 :
{OO 
tryPP 	
{QQ 
returnRR 
awaitRR 
_contextRR 
.RR 
TicketsRR %
.RR% &
FindRR& *
(RR* +
ticketRR+ 1
=>RR2 4
trueRR5 9
)RR9 :
.SS 
SortByDescendingSS 
(SS 
ticketSS $
=>SS% '
ticketSS( .
.SS. /
RatingSS/ 5
)SS5 6
.SS6 7
LimitSS7 <
(SS< =
$numSS= ?
)SS? @
.TT 
ToListAsyncTT 
(TT 
)TT 
;TT 
}UU 
catchVV 
(VV 
	ExceptionVV 
)VV 
{WW 
throwXX 
;XX 
}YY 
}ZZ 
}[[ 
}\\ ©
MC:\TSP.NET\Sysop-Squad\SysopSquad\TicketHandling.Microservice\Model\Ticket.cs
	namespace 	
TicketHandling
 
. 
Microservice %
.% &
Model& +
{ 
[ #
BsonIgnoreExtraElements 
] 
public 
class	 
Ticket 
{		 
internal

 
object

 
x

 
;

 
[ 
BsonId 
] 
[ 
BsonRepresentation 
( 
BsonType  
.  !
ObjectId! )
)) *
]* +
public 

string 
Id 
{ 
get 
; 
set 
;  
}! "
public 

string 
Description 
{ 
get  #
;# $
set% (
;( )
}* +
public 

string 
User 
{ 
get 
; 
set !
;! "
}# $
public 

string 
Agent 
{ 
get 
; 
set "
;" #
}$ %
[ 
BsonElement 
( 
$str $
)$ %
]% &
public 

int 
Runtime 
{ 
get 
; 
set !
;! "
}# $
public 

double 
Rating 
{ 
get 
; 
set  #
;# $
}% &
public 

int 
Reviews 
{ 
get 
; 
set !
;! "
}# $
} 
} ¢
^C:\TSP.NET\Sysop-Squad\SysopSquad\TicketHandling.Microservice\Model\TicketsDatabaseSettings.cs
	namespace 	
TicketHandling
 
. 
Microservice %
.% &
Model& +
{ 
public 
class	 #
TicketsDatabaseSettings &
:' ($
ITicketsDatabaseSettings) A
{ 
public 

string !
TicketsCollectionName '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 

string 
ConnectionString "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 

string 
DatabaseName 
{  
get! $
;$ %
set& )
;) *
}+ ,
}

 
public 
	interface	 $
ITicketsDatabaseSettings +
{ 
string 
!
TicketsCollectionName  
{! "
get# &
;& '
set( +
;+ ,
}- .
string 

ConnectionString 
{ 
get !
;! "
set# &
;& '
}' (
string 

DatabaseName 
{ 
get 
; 
set "
;" #
}$ %
} 
} Í

HC:\TSP.NET\Sysop-Squad\SysopSquad\TicketHandling.Microservice\Program.cs
	namespace 	
TicketHandling
 
. 
Microservice %
{ 
public 
class	 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{		 	
CreateHostBuilder

 
(

 
args

 "
)

" #
.

# $
Build

$ )
(

) *
)

* +
.

+ ,
Run

, /
(

/ 0
)

0 1
;

1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} %
HC:\TSP.NET\Sysop-Squad\SysopSquad\TicketHandling.Microservice\Startup.cs
	namespace 	
TicketHandling
 
. 
Microservice %
{ 
public 
class	 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
	Configure 
< #
TicketsDatabaseSettings 6
>6 7
(7 8
Configuration 
. 

GetSection (
(( )
nameof) /
(/ 0#
TicketsDatabaseSettings0 G
)G H
)H I
)I J
;J K
services 
. 
AddSingleton !
<! "$
ITicketsDatabaseSettings" :
>: ;
(; <
sp< >
=>? A
sp 
. 
GetRequiredService %
<% &
IOptions& .
<. /#
TicketsDatabaseSettings/ F
>F G
>G H
(H I
)I J
.J K
ValueK P
)P Q
;Q R
services 
. 
AddTransient !
<! "
ITicketRepository" 3
,3 4
TicketRepository5 E
>E F
(F G
)G H
;H I
services!! 
.!! 
AddControllers!! #
(!!# $
)!!$ %
;!!% &
services"" 
."" 
AddSwaggerGen"" "
(""" #
c""# $
=>""% '
{## 
c$$ 
.$$ 

SwaggerDoc$$ 
($$ 
$str$$ !
,$$! "
new$$# &
OpenApiInfo$$' 2
{$$3 4
Title$$5 :
=$$; <
$str$$= Z
,$$Z [
Version$$\ c
=$$d e
$str$$f j
}$$k l
)$$l m
;$$m n
}%% 
)%% 
;%% 
services&& 
.&& 
AddCors&& 
(&& 
c&& 
=>&& !
{'' 
c(( 
.(( 
	AddPolicy(( 
((( 
$str(( '
,((' (
options(() 0
=>((1 3
options((4 ;
.((; <
AllowAnyOrigin((< J
(((J K
)((K L
)((L M
;((M N
})) 
))) 
;)) 
}** 
public-- 
void-- 
	Configure-- 
(-- 
IApplicationBuilder-- 1
app--2 5
,--5 6
IWebHostEnvironment--7 J
env--K N
)--N O
{.. 	
app// 
.// 
UseCors// 
(// 
options// !
=>//" $
options//% ,
.//, -
AllowAnyOrigin//- ;
(//; <
)//< =
.//= >
AllowAnyMethod//> L
(//L M
)//M N
.00 
AllowAnyHeader00 
(00  
)00  !
)00! "
;00" #
if11 
(11 
env11 
.11 
IsDevelopment11 !
(11! "
)11" #
)11# $
{22 
app33 
.33 %
UseDeveloperExceptionPage33 -
(33- .
)33. /
;33/ 0
app44 
.44 

UseSwagger44 
(44 
)44  
;44  !
app55 
.55 
UseSwaggerUI55  
(55  !
c55! "
=>55# %
c55& '
.55' (
SwaggerEndpoint55( 7
(557 8
$str558 R
,55R S
$str55T t
)55t u
)55u v
;55v w
}66 
app88 
.88 
UseHttpsRedirection88 #
(88# $
)88$ %
;88% &
app:: 
.:: 

UseRouting:: 
(:: 
):: 
;:: 
app<< 
.<< 
UseAuthorization<<  
(<<  !
)<<! "
;<<" #
app>> 
.>> 
UseEndpoints>> 
(>> 
	endpoints>> &
=>>>' )
{?? 
	endpoints@@ 
.@@ 
MapControllers@@ (
(@@( )
)@@) *
;@@* +
}AA 
)AA 
;AA 
}CC 
}DD 
}EE 